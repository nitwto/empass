# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-09-01 21:00
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import recruit.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('registration', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acad_Annex_A',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_B',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_C',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_D',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_pay_r', models.IntegerField(default=0)),
                ('payband_r', models.IntegerField(default=0)),
                ('payband_end_r', models.IntegerField(default=0)),
                ('total_r', models.IntegerField(default=0)),
                ('basic_pay_d', models.IntegerField(default=0)),
                ('payband_d', models.IntegerField(default=0)),
                ('payband_end_d', models.IntegerField(default=0)),
                ('total_d', models.IntegerField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_E12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data_e1', models.TextField(default='[]')),
                ('annexure_data_e2', models.TextField(default='[]')),
                ('store_e1', models.BooleanField(default=False)),
                ('store_e2', models.BooleanField(default=False)),
                ('total_e1', models.FloatField(default=0)),
                ('total_e2', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file_e1', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('annexure_file_e2', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_F',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('credit_score', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_G',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_H',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_I',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_J',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('tot_sem', models.IntegerField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_K',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('tot_sem', models.IntegerField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_L',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('tot_sem', models.IntegerField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sem', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_N',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('credit_val', models.FloatField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_O',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prog_2_week_duration', models.IntegerField(default=0)),
                ('prog_1_week_duration', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_P',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_Q',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_years', models.IntegerField(default=0)),
                ('total_months', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('total_exp_after_phd', models.IntegerField(default=0)),
                ('total_exp_cur', models.IntegerField(default=0)),
                ('total_exp', models.IntegerField(default=0)),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total_yr', models.IntegerField(default=0)),
                ('total_mnth', models.IntegerField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_R',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_S',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_credit', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('extra_load', models.IntegerField(default=0)),
                ('credit_score', models.FloatField(default=0)),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('avg_load', models.FloatField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_T',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_U',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_V',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('total', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_W1_W2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data1', models.TextField(default='[]')),
                ('annexure_data2', models.TextField(default='[]')),
                ('last_prom_w1', models.CharField(default='', max_length=100)),
                ('last_prom_w2', models.CharField(default='', max_length=100)),
                ('store_w1', models.BooleanField(default=False)),
                ('store_w2', models.BooleanField(default=False)),
                ('total_w1', models.FloatField(default=0)),
                ('total_w2', models.FloatField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file_w1', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('annexure_file_w2', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_X',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_Y',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('ieee', models.BooleanField(default=False)),
                ('fna', models.BooleanField(default=False)),
                ('fnae', models.BooleanField(default=False)),
                ('fnasc', models.BooleanField(default=False)),
                ('credit_score', models.FloatField(default=0)),
                ('value', models.CharField(default='no', max_length=10)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Acad_Annex_Z',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number', models.IntegerField(default=0)),
                ('annexure_data', models.TextField(default='[]')),
                ('last_prom', models.CharField(default='', max_length=100)),
                ('percentage', models.FloatField(default=0)),
                ('store', models.BooleanField(default=False)),
                ('credit_val', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('annexure_file', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Appdata',
            fields=[
                ('app_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('post_for', models.CharField(max_length=200)),
                ('post_in', models.CharField(max_length=200)),
                ('specialize', models.CharField(max_length=600)),
                ('agp1', models.BooleanField(default=True)),
                ('agp2', models.BooleanField(default=False)),
                ('agp3', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('paymentUploaded', models.BooleanField(default=False)),
                ('is_nitw', models.BooleanField(default=False)),
                ('internal_id', models.IntegerField(default=0)),
                ('submitDate', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CallLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_nitw', models.BooleanField(default=False)),
                ('report_time', models.DateTimeField()),
                ('seminar_time', models.DateTimeField()),
                ('seminar_place', models.TextField(max_length=100)),
                ('interview_time', models.DateTimeField()),
                ('interview_place', models.TextField(max_length=100)),
                ('send_time', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('disp_no', models.TextField(max_length=10)),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Department')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Conference_Paper_SCI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_confernce_papers', models.IntegerField(default=0)),
                ('as_first_supervisor', models.IntegerField(default=0)),
                ('papers', models.TextField(default=' ')),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Constants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('desp', models.TextField(null=True)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Consultancy_Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultancy_projects_completed', models.IntegerField()),
                ('amount', models.IntegerField(default=0)),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.TextField()),
                ('abstract_thesis', models.TextField()),
                ('any_other_info', models.TextField()),
                ('sports_extra', models.TextField()),
                ('lang', models.TextField()),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_exp', models.FloatField()),
                ('postPhd_exp', models.FloatField(default=0)),
                ('teaching_data', models.TextField()),
                ('research_exp', models.FloatField()),
                ('research_data', models.TextField()),
                ('industrial_exp', models.FloatField()),
                ('industrial_data', models.TextField()),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='External_Sponsored_RnD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_projects', models.IntegerField(default=0)),
                ('project_as_PI', models.IntegerField(default=0)),
                ('projects_not_pi', models.TextField(default=' ')),
                ('total_patents', models.IntegerField(default=0)),
                ('patents_as_pi', models.IntegerField(default=0)),
                ('patents_not_pi', models.TextField(default=' ')),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='FacUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=200)),
                ('father_name', models.CharField(max_length=255)),
                ('father_occ', models.CharField(max_length=255)),
                ('mother_name', models.CharField(max_length=255)),
                ('mother_occ', models.CharField(blank=True, max_length=255)),
                ('nation', models.CharField(max_length=255)),
                ('pob', models.CharField(max_length=255)),
                ('dob', models.CharField(default='NA', max_length=20)),
                ('age', models.IntegerField(default=0)),
                ('permanent_addr', models.TextField()),
                ('correspond_addr', models.TextField()),
                ('category', models.CharField(blank=True, max_length=10)),
                ('pwd', models.CharField(default='no', max_length=10)),
                ('aadhaarNo', models.CharField(blank=True, max_length=15)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Journal_Papers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_journal_papers', models.IntegerField(default=0)),
                ('as_first_supervisor', models.IntegerField(default=0)),
                ('papers', models.TextField(default=' ')),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patent', models.TextField()),
                ('consultancy', models.TextField()),
                ('admin_resp_held', models.TextField()),
                ('minimum_pay_exp', models.IntegerField()),
                ('time_req', models.IntegerField()),
                ('honor', models.TextField()),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper1', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('paper2', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('paper3', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('paper4', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('paper5', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('cvpaper', models.FileField(blank=True, null=True, upload_to=recruit.models.get_path, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='PhD_Completed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_phd', models.IntegerField(default=0)),
                ('as_first_supervisor', models.IntegerField(default=0)),
                ('phds', models.TextField(default=' ')),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degreeType', models.CharField(max_length=255)),
                ('degreeName', models.TextField()),
                ('university', models.TextField()),
                ('passingYear', models.CharField(max_length=15)),
                ('marks', models.CharField(max_length=25)),
                ('division', models.CharField(max_length=255)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_data', models.TextField()),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_publ', models.TextField()),
                ('research_proj', models.TextField()),
                ('pg', models.IntegerField()),
                ('phd', models.IntegerField()),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='ScrutinizedValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annex_e1', models.FloatField(default=0)),
                ('annex_e2', models.FloatField(default=0)),
                ('annex_f', models.FloatField(default=0)),
                ('annex_g', models.FloatField(default=0)),
                ('annex_h', models.FloatField(default=0)),
                ('annex_i', models.FloatField(default=0)),
                ('annex_j', models.FloatField(default=0)),
                ('annex_k', models.FloatField(default=0)),
                ('annex_l', models.FloatField(default=0)),
                ('annex_m', models.FloatField(default=0)),
                ('annex_n', models.FloatField(default=0)),
                ('annex_o', models.FloatField(default=0)),
                ('annex_p', models.FloatField(default=0)),
                ('annex_q', models.FloatField(default=0)),
                ('annex_r', models.FloatField(default=0)),
                ('annex_s', models.FloatField(default=0)),
                ('annex_t', models.FloatField(default=0)),
                ('annex_u', models.FloatField(default=0)),
                ('annex_v', models.FloatField(default=0)),
                ('annex_w', models.FloatField(default=0)),
                ('annex_w2', models.FloatField(default=0)),
                ('annex_x', models.FloatField(default=0)),
                ('annex_y', models.FloatField(default=0)),
                ('annex_z', models.FloatField(default=0)),
                ('scrutiny_total', models.FloatField(default=0)),
                ('application_status', models.IntegerField(default=0)),
                ('eligible_for', models.IntegerField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('payment_accepted', models.IntegerField(default=0)),
                ('log', models.TextField(default='|')),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='ScrutinizedValues2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annex_e1', models.FloatField(default=0)),
                ('annex_e2', models.FloatField(default=0)),
                ('annex_f', models.FloatField(default=0)),
                ('annex_g', models.FloatField(default=0)),
                ('annex_h', models.FloatField(default=0)),
                ('annex_i', models.FloatField(default=0)),
                ('annex_j', models.FloatField(default=0)),
                ('annex_k', models.FloatField(default=0)),
                ('annex_l', models.FloatField(default=0)),
                ('annex_m', models.FloatField(default=0)),
                ('annex_n', models.FloatField(default=0)),
                ('annex_o', models.FloatField(default=0)),
                ('annex_p', models.FloatField(default=0)),
                ('annex_q', models.FloatField(default=0)),
                ('annex_r', models.FloatField(default=0)),
                ('annex_s', models.FloatField(default=0)),
                ('annex_t', models.FloatField(default=0)),
                ('annex_u', models.FloatField(default=0)),
                ('annex_v', models.FloatField(default=0)),
                ('annex_w', models.FloatField(default=0)),
                ('annex_w2', models.FloatField(default=0)),
                ('annex_x', models.FloatField(default=0)),
                ('annex_y', models.FloatField(default=0)),
                ('annex_z', models.FloatField(default=0)),
                ('scrutiny_total', models.FloatField(default=0)),
                ('application_status', models.IntegerField(default=0)),
                ('eligible_for', models.IntegerField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('log', models.TextField(default='|')),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Scrutiny_h',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_annex_h', models.TextField(default='[]')),
                ('points', models.FloatField(default=0)),
                ('points2', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Scrutiny_i',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_annex_i', models.TextField(default='[]')),
                ('points', models.FloatField(default=0)),
                ('points2', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='ScrutinyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Department')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shortlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg_id', models.TextField(max_length=50)),
                ('is_msg_sent', models.BooleanField(default=False)),
                ('is_mail_sent', models.BooleanField(default=False)),
                ('is_accepted', models.PositiveSmallIntegerField(default=0)),
                ('agp', models.TextField(max_length=50)),
                ('batch', models.PositiveSmallIntegerField(default=1)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTaught',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=10)),
                ('courseType', models.CharField(max_length=30)),
                ('data', models.TextField()),
                ('credit_val', models.FloatField(default=0)),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata')),
            ],
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ur_1', models.IntegerField(default=0)),
                ('sc_1', models.IntegerField(default=0)),
                ('st_1', models.IntegerField(default=0)),
                ('obc_1', models.IntegerField(default=0)),
                ('all_2', models.IntegerField(default=0)),
                ('all_3', models.IntegerField(default=0)),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Department')),
            ],
        ),
        migrations.AddField(
            model_name='acad_annex_z',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_y',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_x',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_w1_w2',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_v',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_u',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_t',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_s',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_r',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_q',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_p',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_o',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_n',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_m',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_l',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_k',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_j',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_i',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_h',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_g',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_f',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_e12',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_d',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_c',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_b',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
        migrations.AddField(
            model_name='acad_annex_a',
            name='app_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recruit.Appdata'),
        ),
    ]
